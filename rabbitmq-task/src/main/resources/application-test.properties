#rabbitMq地址
spring.rabbitmq.host=127.0.0.1
#端口
spring.rabbitmq.port=5672
#账户
spring.rabbitmq.username=guest
#密码
spring.rabbitmq.password=guest
#发送端消息确认回调
spring.rabbitmq.publisher-confirm-type=simple
spring.rabbitmq.publisher-returns=true
#消费端消息确认，开启ACK
spring.rabbitmq.listener.direct.acknowledge-mode=manual
spring.rabbitmq.listener.simple.acknowledge-mode=manual
#注册中心地址
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#spring cloud
#健康检测
eureka.client.healthcheck.enabled=true

feign.hystrix.enabled=true
feign.compression.request.enabled=true
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.response.enabled=true
feign.httpclient.enabled=true
feign.httpclient.max-connections=1000
feign.httpclient.max-connections-per-route=200

################# Servlet 容器 优化 ##############
#设置undertowIO线程数，它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程,不要设置过大，如果过大，启动项目会报错：打开文件数过多
server.undertow.io-threads=16
#阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程,它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
server.undertow.worker-threads=200
#以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理,每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
server.undertow.buffer-size=1024
#是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers=true